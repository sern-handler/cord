/* tslint:disable */
/* eslint-disable */
/**
 * Discord HTTP API (Preview)
 * Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.
 *
 * The version of the OpenAPI document: 10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ApplicationResponse } from './ApplicationResponse';
import {
    ApplicationResponseFromJSON,
    ApplicationResponseFromJSONTyped,
    ApplicationResponseToJSON,
} from './ApplicationResponse';

/**
 * 
 * @export
 * @interface OAuth2GetAuthorizationResponse
 */
export interface OAuth2GetAuthorizationResponse {
    /**
     * 
     * @type {ApplicationResponse}
     * @memberof OAuth2GetAuthorizationResponse
     */
    application: ApplicationResponse;
    /**
     * 
     * @type {any}
     * @memberof OAuth2GetAuthorizationResponse
     */
    expires: any | null;
    /**
     * 
     * @type {any}
     * @memberof OAuth2GetAuthorizationResponse
     */
    scopes: any | null;
    /**
     * 
     * @type {any}
     * @memberof OAuth2GetAuthorizationResponse
     */
    user?: any | null;
}

/**
 * Check if a given object implements the OAuth2GetAuthorizationResponse interface.
 */
export function instanceOfOAuth2GetAuthorizationResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "application" in value;
    isInstance = isInstance && "expires" in value;
    isInstance = isInstance && "scopes" in value;

    return isInstance;
}

export function OAuth2GetAuthorizationResponseFromJSON(json: any): OAuth2GetAuthorizationResponse {
    return OAuth2GetAuthorizationResponseFromJSONTyped(json, false);
}

export function OAuth2GetAuthorizationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OAuth2GetAuthorizationResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'application': ApplicationResponseFromJSON(json['application']),
        'expires': json['expires'],
        'scopes': json['scopes'],
        'user': !exists(json, 'user') ? undefined : json['user'],
    };
}

export function OAuth2GetAuthorizationResponseToJSON(value?: OAuth2GetAuthorizationResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'application': ApplicationResponseToJSON(value.application),
        'expires': value.expires,
        'scopes': value.scopes,
        'user': value.user,
    };
}

