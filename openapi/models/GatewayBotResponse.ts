/* tslint:disable */
/* eslint-disable */
/**
 * Discord HTTP API (Preview)
 * Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.
 *
 * The version of the OpenAPI document: 10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GatewayBotSessionStartLimitResponse } from './GatewayBotSessionStartLimitResponse';
import {
    GatewayBotSessionStartLimitResponseFromJSON,
    GatewayBotSessionStartLimitResponseFromJSONTyped,
    GatewayBotSessionStartLimitResponseToJSON,
} from './GatewayBotSessionStartLimitResponse';

/**
 * 
 * @export
 * @interface GatewayBotResponse
 */
export interface GatewayBotResponse {
    /**
     * 
     * @type {any}
     * @memberof GatewayBotResponse
     */
    url: any | null;
    /**
     * 
     * @type {GatewayBotSessionStartLimitResponse}
     * @memberof GatewayBotResponse
     */
    sessionStartLimit: GatewayBotSessionStartLimitResponse;
    /**
     * 
     * @type {any}
     * @memberof GatewayBotResponse
     */
    shards: any | null;
}

/**
 * Check if a given object implements the GatewayBotResponse interface.
 */
export function instanceOfGatewayBotResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "sessionStartLimit" in value;
    isInstance = isInstance && "shards" in value;

    return isInstance;
}

export function GatewayBotResponseFromJSON(json: any): GatewayBotResponse {
    return GatewayBotResponseFromJSONTyped(json, false);
}

export function GatewayBotResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GatewayBotResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'url': json['url'],
        'sessionStartLimit': GatewayBotSessionStartLimitResponseFromJSON(json['session_start_limit']),
        'shards': json['shards'],
    };
}

export function GatewayBotResponseToJSON(value?: GatewayBotResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'url': value.url,
        'session_start_limit': GatewayBotSessionStartLimitResponseToJSON(value.sessionStartLimit),
        'shards': value.shards,
    };
}

