/* tslint:disable */
/* eslint-disable */
/**
 * Discord HTTP API (Preview)
 * Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.
 *
 * The version of the OpenAPI document: 10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EntityMetadataExternal } from './EntityMetadataExternal';
import {
    EntityMetadataExternalFromJSON,
    EntityMetadataExternalFromJSONTyped,
    EntityMetadataExternalToJSON,
} from './EntityMetadataExternal';

/**
 * 
 * @export
 * @interface ExternalScheduledEventCreateRequest
 */
export interface ExternalScheduledEventCreateRequest {
    /**
     * 
     * @type {any}
     * @memberof ExternalScheduledEventCreateRequest
     */
    name: any | null;
    /**
     * 
     * @type {any}
     * @memberof ExternalScheduledEventCreateRequest
     */
    description?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ExternalScheduledEventCreateRequest
     */
    image?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ExternalScheduledEventCreateRequest
     */
    scheduledStartTime: any | null;
    /**
     * 
     * @type {any}
     * @memberof ExternalScheduledEventCreateRequest
     */
    scheduledEndTime?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ExternalScheduledEventCreateRequest
     */
    privacyLevel: any | null;
    /**
     * 
     * @type {any}
     * @memberof ExternalScheduledEventCreateRequest
     */
    entityType: any | null;
    /**
     * 
     * @type {any}
     * @memberof ExternalScheduledEventCreateRequest
     */
    channelId?: any | null;
    /**
     * 
     * @type {EntityMetadataExternal}
     * @memberof ExternalScheduledEventCreateRequest
     */
    entityMetadata: EntityMetadataExternal;
}

/**
 * Check if a given object implements the ExternalScheduledEventCreateRequest interface.
 */
export function instanceOfExternalScheduledEventCreateRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "scheduledStartTime" in value;
    isInstance = isInstance && "privacyLevel" in value;
    isInstance = isInstance && "entityType" in value;
    isInstance = isInstance && "entityMetadata" in value;

    return isInstance;
}

export function ExternalScheduledEventCreateRequestFromJSON(json: any): ExternalScheduledEventCreateRequest {
    return ExternalScheduledEventCreateRequestFromJSONTyped(json, false);
}

export function ExternalScheduledEventCreateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExternalScheduledEventCreateRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'image': !exists(json, 'image') ? undefined : json['image'],
        'scheduledStartTime': json['scheduled_start_time'],
        'scheduledEndTime': !exists(json, 'scheduled_end_time') ? undefined : json['scheduled_end_time'],
        'privacyLevel': json['privacy_level'],
        'entityType': json['entity_type'],
        'channelId': !exists(json, 'channel_id') ? undefined : json['channel_id'],
        'entityMetadata': EntityMetadataExternalFromJSON(json['entity_metadata']),
    };
}

export function ExternalScheduledEventCreateRequestToJSON(value?: ExternalScheduledEventCreateRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'image': value.image,
        'scheduled_start_time': value.scheduledStartTime,
        'scheduled_end_time': value.scheduledEndTime,
        'privacy_level': value.privacyLevel,
        'entity_type': value.entityType,
        'channel_id': value.channelId,
        'entity_metadata': EntityMetadataExternalToJSON(value.entityMetadata),
    };
}

