/* tslint:disable */
/* eslint-disable */
/**
 * Discord HTTP API (Preview)
 * Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.
 *
 * The version of the OpenAPI document: 10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GuildInviteResponse
 */
export interface GuildInviteResponse {
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    type?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    code: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    inviter?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    maxAge?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    createdAt?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    expiresAt?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    isContact?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    flags?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    guild?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    guildId?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    channel?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    stageInstance?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    targetType?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    targetUser?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    targetApplication?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    guildScheduledEvent?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    uses?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    maxUses?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    temporary?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    approximateMemberCount?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GuildInviteResponse
     */
    approximatePresenceCount?: any | null;
}

/**
 * Check if a given object implements the GuildInviteResponse interface.
 */
export function instanceOfGuildInviteResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "code" in value;

    return isInstance;
}

export function GuildInviteResponseFromJSON(json: any): GuildInviteResponse {
    return GuildInviteResponseFromJSONTyped(json, false);
}

export function GuildInviteResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GuildInviteResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'code': json['code'],
        'inviter': !exists(json, 'inviter') ? undefined : json['inviter'],
        'maxAge': !exists(json, 'max_age') ? undefined : json['max_age'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'expiresAt': !exists(json, 'expires_at') ? undefined : json['expires_at'],
        'isContact': !exists(json, 'is_contact') ? undefined : json['is_contact'],
        'flags': !exists(json, 'flags') ? undefined : json['flags'],
        'guild': !exists(json, 'guild') ? undefined : json['guild'],
        'guildId': !exists(json, 'guild_id') ? undefined : json['guild_id'],
        'channel': !exists(json, 'channel') ? undefined : json['channel'],
        'stageInstance': !exists(json, 'stage_instance') ? undefined : json['stage_instance'],
        'targetType': !exists(json, 'target_type') ? undefined : json['target_type'],
        'targetUser': !exists(json, 'target_user') ? undefined : json['target_user'],
        'targetApplication': !exists(json, 'target_application') ? undefined : json['target_application'],
        'guildScheduledEvent': !exists(json, 'guild_scheduled_event') ? undefined : json['guild_scheduled_event'],
        'uses': !exists(json, 'uses') ? undefined : json['uses'],
        'maxUses': !exists(json, 'max_uses') ? undefined : json['max_uses'],
        'temporary': !exists(json, 'temporary') ? undefined : json['temporary'],
        'approximateMemberCount': !exists(json, 'approximate_member_count') ? undefined : json['approximate_member_count'],
        'approximatePresenceCount': !exists(json, 'approximate_presence_count') ? undefined : json['approximate_presence_count'],
    };
}

export function GuildInviteResponseToJSON(value?: GuildInviteResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'code': value.code,
        'inviter': value.inviter,
        'max_age': value.maxAge,
        'created_at': value.createdAt,
        'expires_at': value.expiresAt,
        'is_contact': value.isContact,
        'flags': value.flags,
        'guild': value.guild,
        'guild_id': value.guildId,
        'channel': value.channel,
        'stage_instance': value.stageInstance,
        'target_type': value.targetType,
        'target_user': value.targetUser,
        'target_application': value.targetApplication,
        'guild_scheduled_event': value.guildScheduledEvent,
        'uses': value.uses,
        'max_uses': value.maxUses,
        'temporary': value.temporary,
        'approximate_member_count': value.approximateMemberCount,
        'approximate_presence_count': value.approximatePresenceCount,
    };
}

