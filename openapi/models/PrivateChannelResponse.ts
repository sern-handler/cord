/* tslint:disable */
/* eslint-disable */
/**
 * Discord HTTP API (Preview)
 * Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.
 *
 * The version of the OpenAPI document: 10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PrivateChannelResponse
 */
export interface PrivateChannelResponse {
    /**
     * 
     * @type {any}
     * @memberof PrivateChannelResponse
     */
    id: any | null;
    /**
     * 
     * @type {any}
     * @memberof PrivateChannelResponse
     */
    type: any | null;
    /**
     * 
     * @type {any}
     * @memberof PrivateChannelResponse
     */
    lastMessageId?: any | null;
    /**
     * 
     * @type {any}
     * @memberof PrivateChannelResponse
     */
    flags: any | null;
    /**
     * 
     * @type {any}
     * @memberof PrivateChannelResponse
     */
    lastPinTimestamp?: any | null;
    /**
     * 
     * @type {any}
     * @memberof PrivateChannelResponse
     */
    recipients: any | null;
}

/**
 * Check if a given object implements the PrivateChannelResponse interface.
 */
export function instanceOfPrivateChannelResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "flags" in value;
    isInstance = isInstance && "recipients" in value;

    return isInstance;
}

export function PrivateChannelResponseFromJSON(json: any): PrivateChannelResponse {
    return PrivateChannelResponseFromJSONTyped(json, false);
}

export function PrivateChannelResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrivateChannelResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': json['type'],
        'lastMessageId': !exists(json, 'last_message_id') ? undefined : json['last_message_id'],
        'flags': json['flags'],
        'lastPinTimestamp': !exists(json, 'last_pin_timestamp') ? undefined : json['last_pin_timestamp'],
        'recipients': json['recipients'],
    };
}

export function PrivateChannelResponseToJSON(value?: PrivateChannelResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'type': value.type,
        'last_message_id': value.lastMessageId,
        'flags': value.flags,
        'last_pin_timestamp': value.lastPinTimestamp,
        'recipients': value.recipients,
    };
}

