/* tslint:disable */
/* eslint-disable */
/**
 * Discord HTTP API (Preview)
 * Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.
 *
 * The version of the OpenAPI document: 10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CommandPermissionResponse
 */
export interface CommandPermissionResponse {
    /**
     * 
     * @type {any}
     * @memberof CommandPermissionResponse
     */
    id: any | null;
    /**
     * 
     * @type {any}
     * @memberof CommandPermissionResponse
     */
    type: any | null;
    /**
     * 
     * @type {any}
     * @memberof CommandPermissionResponse
     */
    permission: any | null;
}

/**
 * Check if a given object implements the CommandPermissionResponse interface.
 */
export function instanceOfCommandPermissionResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "permission" in value;

    return isInstance;
}

export function CommandPermissionResponseFromJSON(json: any): CommandPermissionResponse {
    return CommandPermissionResponseFromJSONTyped(json, false);
}

export function CommandPermissionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommandPermissionResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': json['type'],
        'permission': json['permission'],
    };
}

export function CommandPermissionResponseToJSON(value?: CommandPermissionResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'type': value.type,
        'permission': value.permission,
    };
}

