/* tslint:disable */
/* eslint-disable */
/**
 * Discord HTTP API (Preview)
 * Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.
 *
 * The version of the OpenAPI document: 10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GatewayBotSessionStartLimitResponse
 */
export interface GatewayBotSessionStartLimitResponse {
    /**
     * 
     * @type {any}
     * @memberof GatewayBotSessionStartLimitResponse
     */
    maxConcurrency: any | null;
    /**
     * 
     * @type {any}
     * @memberof GatewayBotSessionStartLimitResponse
     */
    remaining: any | null;
    /**
     * 
     * @type {any}
     * @memberof GatewayBotSessionStartLimitResponse
     */
    resetAfter: any | null;
    /**
     * 
     * @type {any}
     * @memberof GatewayBotSessionStartLimitResponse
     */
    total: any | null;
}

/**
 * Check if a given object implements the GatewayBotSessionStartLimitResponse interface.
 */
export function instanceOfGatewayBotSessionStartLimitResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "maxConcurrency" in value;
    isInstance = isInstance && "remaining" in value;
    isInstance = isInstance && "resetAfter" in value;
    isInstance = isInstance && "total" in value;

    return isInstance;
}

export function GatewayBotSessionStartLimitResponseFromJSON(json: any): GatewayBotSessionStartLimitResponse {
    return GatewayBotSessionStartLimitResponseFromJSONTyped(json, false);
}

export function GatewayBotSessionStartLimitResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GatewayBotSessionStartLimitResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'maxConcurrency': json['max_concurrency'],
        'remaining': json['remaining'],
        'resetAfter': json['reset_after'],
        'total': json['total'],
    };
}

export function GatewayBotSessionStartLimitResponseToJSON(value?: GatewayBotSessionStartLimitResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'max_concurrency': value.maxConcurrency,
        'remaining': value.remaining,
        'reset_after': value.resetAfter,
        'total': value.total,
    };
}

