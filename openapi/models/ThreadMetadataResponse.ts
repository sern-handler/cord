/* tslint:disable */
/* eslint-disable */
/**
 * Discord HTTP API (Preview)
 * Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.
 *
 * The version of the OpenAPI document: 10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ThreadMetadataResponse
 */
export interface ThreadMetadataResponse {
    /**
     * 
     * @type {any}
     * @memberof ThreadMetadataResponse
     */
    archived: any | null;
    /**
     * 
     * @type {any}
     * @memberof ThreadMetadataResponse
     */
    archiveTimestamp?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ThreadMetadataResponse
     */
    autoArchiveDuration: any | null;
    /**
     * 
     * @type {any}
     * @memberof ThreadMetadataResponse
     */
    locked: any | null;
    /**
     * 
     * @type {any}
     * @memberof ThreadMetadataResponse
     */
    createTimestamp?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ThreadMetadataResponse
     */
    invitable?: any | null;
}

/**
 * Check if a given object implements the ThreadMetadataResponse interface.
 */
export function instanceOfThreadMetadataResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "archived" in value;
    isInstance = isInstance && "autoArchiveDuration" in value;
    isInstance = isInstance && "locked" in value;

    return isInstance;
}

export function ThreadMetadataResponseFromJSON(json: any): ThreadMetadataResponse {
    return ThreadMetadataResponseFromJSONTyped(json, false);
}

export function ThreadMetadataResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThreadMetadataResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'archived': json['archived'],
        'archiveTimestamp': !exists(json, 'archive_timestamp') ? undefined : json['archive_timestamp'],
        'autoArchiveDuration': json['auto_archive_duration'],
        'locked': json['locked'],
        'createTimestamp': !exists(json, 'create_timestamp') ? undefined : json['create_timestamp'],
        'invitable': !exists(json, 'invitable') ? undefined : json['invitable'],
    };
}

export function ThreadMetadataResponseToJSON(value?: ThreadMetadataResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'archived': value.archived,
        'archive_timestamp': value.archiveTimestamp,
        'auto_archive_duration': value.autoArchiveDuration,
        'locked': value.locked,
        'create_timestamp': value.createTimestamp,
        'invitable': value.invitable,
    };
}

