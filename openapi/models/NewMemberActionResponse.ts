/* tslint:disable */
/* eslint-disable */
/**
 * Discord HTTP API (Preview)
 * Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.
 *
 * The version of the OpenAPI document: 10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NewMemberActionResponse
 */
export interface NewMemberActionResponse {
    /**
     * 
     * @type {any}
     * @memberof NewMemberActionResponse
     */
    channelId: any | null;
    /**
     * 
     * @type {any}
     * @memberof NewMemberActionResponse
     */
    actionType: any | null;
    /**
     * 
     * @type {any}
     * @memberof NewMemberActionResponse
     */
    title: any | null;
    /**
     * 
     * @type {any}
     * @memberof NewMemberActionResponse
     */
    description: any | null;
    /**
     * 
     * @type {any}
     * @memberof NewMemberActionResponse
     */
    emoji?: any | null;
    /**
     * 
     * @type {any}
     * @memberof NewMemberActionResponse
     */
    icon?: any | null;
}

/**
 * Check if a given object implements the NewMemberActionResponse interface.
 */
export function instanceOfNewMemberActionResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "channelId" in value;
    isInstance = isInstance && "actionType" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "description" in value;

    return isInstance;
}

export function NewMemberActionResponseFromJSON(json: any): NewMemberActionResponse {
    return NewMemberActionResponseFromJSONTyped(json, false);
}

export function NewMemberActionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewMemberActionResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'channelId': json['channel_id'],
        'actionType': json['action_type'],
        'title': json['title'],
        'description': json['description'],
        'emoji': !exists(json, 'emoji') ? undefined : json['emoji'],
        'icon': !exists(json, 'icon') ? undefined : json['icon'],
    };
}

export function NewMemberActionResponseToJSON(value?: NewMemberActionResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'channel_id': value.channelId,
        'action_type': value.actionType,
        'title': value.title,
        'description': value.description,
        'emoji': value.emoji,
        'icon': value.icon,
    };
}

