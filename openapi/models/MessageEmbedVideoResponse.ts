/* tslint:disable */
/* eslint-disable */
/**
 * Discord HTTP API (Preview)
 * Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.
 *
 * The version of the OpenAPI document: 10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MessageEmbedVideoResponse
 */
export interface MessageEmbedVideoResponse {
    /**
     * 
     * @type {any}
     * @memberof MessageEmbedVideoResponse
     */
    url?: any | null;
    /**
     * 
     * @type {any}
     * @memberof MessageEmbedVideoResponse
     */
    proxyUrl?: any | null;
    /**
     * 
     * @type {any}
     * @memberof MessageEmbedVideoResponse
     */
    width?: any | null;
    /**
     * 
     * @type {any}
     * @memberof MessageEmbedVideoResponse
     */
    height?: any | null;
}

/**
 * Check if a given object implements the MessageEmbedVideoResponse interface.
 */
export function instanceOfMessageEmbedVideoResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MessageEmbedVideoResponseFromJSON(json: any): MessageEmbedVideoResponse {
    return MessageEmbedVideoResponseFromJSONTyped(json, false);
}

export function MessageEmbedVideoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageEmbedVideoResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'url': !exists(json, 'url') ? undefined : json['url'],
        'proxyUrl': !exists(json, 'proxy_url') ? undefined : json['proxy_url'],
        'width': !exists(json, 'width') ? undefined : json['width'],
        'height': !exists(json, 'height') ? undefined : json['height'],
    };
}

export function MessageEmbedVideoResponseToJSON(value?: MessageEmbedVideoResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'url': value.url,
        'proxy_url': value.proxyUrl,
        'width': value.width,
        'height': value.height,
    };
}

