/* tslint:disable */
/* eslint-disable */
/**
 * Discord HTTP API (Preview)
 * Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.
 *
 * The version of the OpenAPI document: 10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserResponse } from './UserResponse';
import {
    UserResponseFromJSON,
    UserResponseFromJSONTyped,
    UserResponseToJSON,
} from './UserResponse';

/**
 * 
 * @export
 * @interface ExternalConnectionIntegrationResponse
 */
export interface ExternalConnectionIntegrationResponse {
    /**
     * 
     * @type {any}
     * @memberof ExternalConnectionIntegrationResponse
     */
    type: any | null;
    /**
     * 
     * @type {any}
     * @memberof ExternalConnectionIntegrationResponse
     */
    name?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ExternalConnectionIntegrationResponse
     */
    account?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ExternalConnectionIntegrationResponse
     */
    enabled?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ExternalConnectionIntegrationResponse
     */
    id: any | null;
    /**
     * 
     * @type {UserResponse}
     * @memberof ExternalConnectionIntegrationResponse
     */
    user: UserResponse;
    /**
     * 
     * @type {any}
     * @memberof ExternalConnectionIntegrationResponse
     */
    revoked?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ExternalConnectionIntegrationResponse
     */
    expireBehavior?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ExternalConnectionIntegrationResponse
     */
    expireGracePeriod?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ExternalConnectionIntegrationResponse
     */
    subscriberCount?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ExternalConnectionIntegrationResponse
     */
    syncedAt?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ExternalConnectionIntegrationResponse
     */
    roleId?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ExternalConnectionIntegrationResponse
     */
    syncing?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ExternalConnectionIntegrationResponse
     */
    enableEmoticons?: any | null;
}

/**
 * Check if a given object implements the ExternalConnectionIntegrationResponse interface.
 */
export function instanceOfExternalConnectionIntegrationResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "user" in value;

    return isInstance;
}

export function ExternalConnectionIntegrationResponseFromJSON(json: any): ExternalConnectionIntegrationResponse {
    return ExternalConnectionIntegrationResponseFromJSONTyped(json, false);
}

export function ExternalConnectionIntegrationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExternalConnectionIntegrationResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'account': !exists(json, 'account') ? undefined : json['account'],
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'id': json['id'],
        'user': UserResponseFromJSON(json['user']),
        'revoked': !exists(json, 'revoked') ? undefined : json['revoked'],
        'expireBehavior': !exists(json, 'expire_behavior') ? undefined : json['expire_behavior'],
        'expireGracePeriod': !exists(json, 'expire_grace_period') ? undefined : json['expire_grace_period'],
        'subscriberCount': !exists(json, 'subscriber_count') ? undefined : json['subscriber_count'],
        'syncedAt': !exists(json, 'synced_at') ? undefined : json['synced_at'],
        'roleId': !exists(json, 'role_id') ? undefined : json['role_id'],
        'syncing': !exists(json, 'syncing') ? undefined : json['syncing'],
        'enableEmoticons': !exists(json, 'enable_emoticons') ? undefined : json['enable_emoticons'],
    };
}

export function ExternalConnectionIntegrationResponseToJSON(value?: ExternalConnectionIntegrationResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'name': value.name,
        'account': value.account,
        'enabled': value.enabled,
        'id': value.id,
        'user': UserResponseToJSON(value.user),
        'revoked': value.revoked,
        'expire_behavior': value.expireBehavior,
        'expire_grace_period': value.expireGracePeriod,
        'subscriber_count': value.subscriberCount,
        'synced_at': value.syncedAt,
        'role_id': value.roleId,
        'syncing': value.syncing,
        'enable_emoticons': value.enableEmoticons,
    };
}

